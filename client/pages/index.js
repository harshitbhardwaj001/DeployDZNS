import Head from "next/head";
import Navbar from "../components/Navbar";
import Loader from "../components/Loader";
import gsap from "gsap";
import { ScrollTrigger } from "gsap/all";
import { useEffect, useState } from "react";
import { HeroSection } from "../components/HeroSection";
import { Sound } from "../components";
import LaunchTeaser from "../components/LaunchTeaser";
import About from "../components/home/About";
import Flowchart from "../components/home/Flowchart";
import StepsCard from "../components/home/StepsCard";
import { useCookies } from "react-cookie";

export default function Home() {
  const [clicked, setClicked] = useState(false);
  const [cookies, setCookies] = useCookies("hasVisited");
  const [isLoading, setIsLoading] = useState(false);

  useEffect(() => {
    const hasVisitedBefore = cookies.hasVisited;
    if (!hasVisitedBefore) {
      setIsLoading(true);
      const tl = gsap.timeline();

      tl.to(".Nav", {
        // autoAlpha: 1, // Show the Nav div
        display: "block",
        opacity: 1,
        delay: 6.5, // Set the duration of the animation
      });  
      // tl.to("Nav", {
      //   delay: 0.2,
      // });
      const expirationDate = new Date();
      expirationDate.setTime(expirationDate.getTime() + 10 * 60 * 1000); // 10 minutes in milliseconds

      setCookies("hasVisited", "true", { expires: expirationDate });
    }

    gsap.delayedCall(isLoading ? 6.5 : 0, () => {
      const tl1 = gsap.timeline({
        scrollTrigger: {
          trigger: "#bgChange",
          // markers: true,
          start: "-10% 0%",
          end: "0% 0%",
          scrub: 1,
          duration: 1,
        },
      });
      tl1.to("#pageMain", {
        backgroundColor: "#1e1e1e",
      });
    });
  }, []);
  return (
    <>
      <Head>
        <title>DZNS Studio | Home</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/logo.png" />
      </Head>
      <div className="w-[100vw] overflow-hidden">
        <main id="pageMain" className="bg-[#3E2A3E]">
          {/* <LaunchTeaser /> */}

          {isLoading && (
            <div className="block overflow-hidden fixed h-full w-full">
              <Loader />
            </div>
          )}

          <div
            className={`Nav h-full w-full ${
              isLoading ? "hidden opacity-0" : ""
            }`}
          >
            <div className="overflow-hidden h-full w-full z-[3]">
              <Navbar clicked={clicked} setClicked={setClicked} />
            </div>
            <div className={`${clicked ? "hidden" : "block"}`}>
              <HeroSection />
              <div id="bgChange">
                <About />
                {/* <div className="absolute top-[100vh] z-[0] gif-overlay1"></div> */}
                <div className="hidden xs:max-md:block">
                  <Flowchart />
                </div>
                <div className="xs:max-md:hidden">
                  <StepsCard />
                </div>
                <footer className="flex justify-center mt-[5rem] pb-[2rem]">
                  <div className="z-[20]">
                    &copy;{new Date().getFullYear()} DZNS Studio
                  </div>
                </footer>
              </div>
            </div>
            <div className="relative z-[5]">
              <Sound />
            </div>
          </div>
        </main>
      </div>
    </>
  );
}
